/*
By DrakerDG
Youtube: https://youtube.com/user/DrakerDG
Facebook: https://www.facebook.com/DrakerDG
Instagram: https://www.instagram.com/drakerdgx
*/

const int BUZZER = 10;
const int OctX = 0; // -3 to 4
 
// Astronomia theme
//const int MeSderM[] [2] = {{72 ,6}, {70 ,6}, {69 ,6}, {65 ,6}, {67 ,3}, {67 ,6}, {74 ,6}, {72 ,3}, {70 ,3}, {69 ,3}, {69 ,6}, {69 ,6}, {72 ,3}, {70 ,6}, {69 ,6}, {67 ,3}, {67 ,6}, {82 ,6}, {81 ,6}, {82 ,6}, {81 ,6}, {82 ,6}, {70 ,6}, {70 ,6}, {70 ,6}, {70 ,6}, {74 ,6}, {74 ,6}, {74 ,6}, {74 ,6}, {72 ,6}, {72 ,6}, {72 ,6}, {72 ,6}, {77 ,6}, {77 ,6}, {77 ,6}, {77 ,6}, {79 ,6}, {79 ,6}, {79 ,6}, {79 ,6}, {79 ,6}, {79 ,6}, {79 ,6}, {79 ,6}, {79 ,6}, {79 ,6}, {79 ,6}, {79 ,6}};

// Rally X theme
const int MeSderM[] [2] = {{94 ,20}, {91 ,20}, {93 ,20}, {89 ,20}, {0 ,2}, {74 ,10}, {76 ,10}, {79 ,10}, {83 ,5}, {79 ,10}, {76 ,5}, {74 ,10}, {76 ,10}, {79 ,10}, {82 ,5}, {79 ,10}, {76 ,5}, {74 ,10}, {76 ,10}, {79 ,10}, {83 ,5}, {79 ,10}, {83 ,10}, {84 ,10}, {86 ,10}, {84 ,10}, {82 ,10}, {79 ,10}, {82 ,10}, {79 ,10}, {0 ,2}, {81 ,6}, {81 ,6}, {78 ,6}, {76 ,6}, {81 ,3}, {84 ,3}, {81 ,6}, {81 ,6}, {78 ,6}, {76 ,6}, {81 ,3}, {78 ,3}, {81 ,6}, {81 ,6}, {78 ,6}, {76 ,6}, {81 ,6}, {83 ,6}, {85 ,6}, {86 ,6}, {88 ,6}, {87 ,12}, {88 ,12}, {87 ,12}, {88 ,12}, {87 ,12}, {88 ,12}, {88 ,6}, {0 ,6}, {88 ,12}, {86 ,12}, {85 ,12}, {83 ,12}, {81 ,6}, {81 ,6}, {78 ,6}, {76 ,6}, {81 ,3}, {84 ,3}, {81 ,6}, {81 ,6}, {78 ,6}, {76 ,6}, {81 ,3}, {78 ,3}, {81 ,6}, {81 ,6}, {78 ,6}, {76 ,6}, {81 ,6}, {83 ,6}, {85 ,6}, {86 ,6}, {100 ,6}, {86 ,12}, {85 ,12}, {83 ,6}, {81 ,6}, {79 ,6}, {80 ,6}, {81 ,6}, {0 ,6}, {88 ,6}, {88 ,6}, {85 ,6}, {88 ,6}, {90 ,6}, {85 ,6}, {88 ,6}, {90 ,6}, {85 ,6}, {83 ,6}, {81 ,6}, {78 ,6}, {81 ,3}, {81 ,3}, {78 ,6}, {81 ,6}, {83 ,6}, {81 ,6}, {85 ,6}, {83 ,6}, {81 ,6}, {83 ,6}, {85 ,6}, {81 ,3}, {78 ,6}, {76 ,2}, {0 ,7}, {81 ,6}, {80 ,6}, {76 ,6}, {81 ,6}, {80 ,6}, {76 ,6}, {74 ,6}, {76 ,6}, {74 ,6}, {72 ,6}, {69 ,6}, {74 ,6}, {73 ,3}, {69 ,3}, {74 ,6}, {72 ,6}, {69 ,6}, {67 ,6}, {69 ,6}, {72 ,6}, {74 ,6}, {75 ,6}, {76 ,6}, {80 ,6}, {76 ,6}, {74 ,6}, {73 ,2}, {0 ,7}, {84 ,20}, {86 ,20}, {88 ,20}, {89 ,20}, {0 ,15}};

// Spyderman theme
//const int MeSderM[] [2] = {{60 ,6}, {63 ,6}, {67 ,2}, {66 ,6}, {63 ,6}, {60 ,2}, {60 ,6}, {63 ,6}, {67 ,6}, {68 ,6}, {67 ,6}, {66 ,6}, {63 ,6}, {60 ,2}, {65 ,6}, {68 ,6}, {72 ,2}, {71 ,6}, {68 ,6}, {65 ,2}, {60 ,6}, {63 ,6}, {67 ,2}, {66 ,6}, {63 ,6}, {60 ,2}, {68 ,6}, {67 ,1}, {67 ,6}, {65 ,6}, {63 ,6}, {65 ,6}, {63 ,6}, {60 ,1}, {67 ,6}, {68 ,6}, {70 ,2}, {68 ,6}, {67 ,2}, {65 ,6}, {63 ,6}, {65 ,2}, {63 ,6}, {62 ,6}, {63 ,2}, {67 ,6}, {68 ,6}, {70 ,2}, {68 ,6}, {67 ,2}, {65 ,6}, {63 ,6}, {65 ,2}, {63 ,6}, {65 ,6}, {67 ,1}, {67 ,6}, {65 ,6}, {63 ,6}, {65 ,6}, {63 ,6}, {60 ,1}, {67 ,6}, {65 ,6}, {63 ,6}, {65 ,6}, {67 ,6}, {74 ,1}};

// Axel Foley theme
//const int MeSderM[] [2] = {{77 ,3}, {80 ,4}, {77 ,6}, {77 ,12}, {82 ,6}, {77 ,6}, {75 ,6}, {77 ,3}, {84 ,4}, {77 ,6}, {77 ,12}, {85 ,6}, {84 ,6}, {80 ,6}, {77 ,6}, {84 ,6}, {89 ,6}, {77 ,12}, {75 ,6}, {75 ,12}, {72 ,6}, {79 ,6}, {77 ,1}, {65 ,3}, {77 ,5}, {63 ,6}, {75 ,12}, {60 ,6}, {72 ,8}, {63 ,6}, {65 ,3}, {77 ,3}, {60 ,12}, {72 ,8}, {75 ,6}, {77 ,6}, {61 ,3}, {73 ,5}, {63 ,6}, {75 ,12}, {60 ,6}, {75 ,8}, {65 ,6}, {77 ,1}, {75 ,24}, {72 ,6}, {70 ,6}, {68 ,6}};

void melodyY(int RepX, int iniX, int endX) {
	for (int RepI = 0; RepI < RepX; RepI++) {
        for (int thisNote = iniX; thisNote < endX; thisNote++) {
          int noteDuration = 1000 / MeSderM[thisNote][1];
          float NteX = MeSderM[thisNote][0]+OctX*12-69;
          NteX = pow(2, NteX/12)*440;
          String str1 = "Eighth: " + String(4+OctX) + "; Freq: " + String(NteX,3);
          Serial.println(str1);
          tone(BUZZER, NteX, noteDuration);
          int pauseBetweenNotes = noteDuration * 1.30;
          delay(pauseBetweenNotes);
          noTone(BUZZER);
        }    
    }
}

void ASA() {
  melodyY(1,22,50);
  for(int i=0; i<6; i++){
    melodyY(1,0,15);
    melodyY(2,15,22);
    melodyY(1,4,15);
    melodyY(2,15,22);
    melodyY(1,4,15);
    melodyY(2,15,22);
    melodyY(1,22,50);
  }
}

void ASB() {
  melodyY(1,0,31);
  for(int i=0; i<5; i++){
    melodyY(1,31,93);
    melodyY(2,93,120);
    melodyY(2,120,148);
  }
  melodyY(3,148,153);
}

void ASC() {
  for(int i=0; i<2; i++){
    melodyY(2,0,34);
    melodyY(1,34,56);
  }
  melodyY(1,0,34);
  melodyY(1,56,68);
}

void ASD() {
  melodyY(2,0,23);
  melodyY(2,23,48);
  melodyY(2,0,23);
}

void setup() {
//  ASA();
  ASB();
//  ASC();
//  ASD();
}

void loop() {
}
